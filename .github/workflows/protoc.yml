name: "Protocol Buffer Stubs Generation"
on:
  push:
    tags:
      - "**"

jobs:
  protoc_go:
    name: "Generate"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["keycloak"]
    steps:
      - name: Install Go
        uses: actions/setup-go@v4.0.1

      - uses: actions/checkout@v3
      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: "Generate for Golang"
        shell: bash
        run: |
          chmod +x "${GITHUB_WORKSPACE}/protoc-go.sh"
          ls -alh ${GITHUB_WORKSPACE}
          ./protoc-go.sh ${{ matrix.service }} ${{ env.RELEASE_VERSION }} ${{ github.actor }} ${{ github.actor }}@users.noreply.github.com ${{ github.repository }}

  protoc_rust:
    name: "Generate Rust files"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["keycloak"]
    steps:
      - uses: actions/checkout@v3
      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: "Generate for Rust"
        shell: bash
        run: |
          chmod +x "${GITHUB_WORKSPACE}/protoc-rust.sh"
          ls -alh ${GITHUB_WORKSPACE}
          ./protoc-rust.sh ${{ matrix.service }} ${{ env.RELEASE_VERSION }} ${{ github.actor }} ${{ github.actor }}@users.noreply.github.com ${{ secrets.CARGO_TOKEN }}

  protoc_java:
    name: "Generate Java protobuf APIs"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["keycloak"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.8.0
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}

      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: "Generate for Java"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          chmod +x "${GITHUB_WORKSPACE}/protoc-java.sh"
          ls -alh ${GITHUB_WORKSPACE}
          ./protoc-java.sh ${{ matrix.service }} ${{ env.RELEASE_VERSION }} ${{ github.actor }} ${{ github.actor }}@users.noreply.github.com $GITHUB_WORKSPACE/settings.xml


  create_new_release:
    runs-on: ubuntu-latest
    name: Create new release
    needs:
      - protoc_go
      - protoc_rust
      - protoc_java
    steps:
      - name: Checkout kubernetes repository
        uses: actions/checkout@v3

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          body: ${{steps.github_release.outputs.changelog}}
